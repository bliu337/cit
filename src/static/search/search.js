'use strict';import{AssertionError,AttributeError,BaseException,DeprecationWarning,Exception,IndexError,IterableError,KeyError,NotImplementedError,RuntimeWarning,StopIteration,UserWarning,ValueError,Warning,__JsIterator__,__PyIterator__,__Terminal__,__add__,__and__,__call__,__class__,__envir__,__eq__,__floordiv__,__ge__,__get__,__getcm__,__getitem__,__getslice__,__getsm__,__gt__,__i__,__iadd__,__iand__,__idiv__,__ijsmod__,__ilshift__,__imatmul__,__imod__,__imul__,__in__,__init__,__ior__,__ipow__,
__irshift__,__isub__,__ixor__,__jsUsePyNext__,__jsmod__,__k__,__kwargtrans__,__le__,__lshift__,__lt__,__matmul__,__mergefields__,__mergekwargtrans__,__mod__,__mul__,__ne__,__neg__,__nest__,__or__,__pow__,__pragma__,__pyUseJsNext__,__rshift__,__setitem__,__setproperty__,__setslice__,__sort__,__specialattrib__,__sub__,__super__,__t__,__terminal__,__truediv__,__withblock__,__xor__,abs,all,any,assert,bool,bytearray,bytes,callable,chr,copy,deepcopy,delattr,dict,dir,divmod,enumerate,filter,float,getattr,
hasattr,input,int,isinstance,issubclass,len,list,map,max,min,object,ord,pow,print,property,py_TypeError,py_iter,py_metatype,py_next,py_reversed,py_typeof,range,repr,round,set,setattr,sorted,str,sum,tuple,zip}from"./org.transcrypt.__runtime__.js";import{NODE_MAP,build,caret_down_fill,caret_right_fill,dot,find_attr_parents,get_obj,results_element,searchbox,searchbutton,tree_element}from"./ui_util.js";var __name__="__main__";export var tree_clicker=async function(event){var anid=find_attr_parents(event.target,
"anid");if(len(anid)>0)focus_node(anid)};export var focus_node=async function(desired){if(!__in__(desired,NODE_MAP))return;var node=NODE_MAP[desired];for(var notationtext of document.querySelectorAll(".notationtext"))notationtext.classList.remove("focussed");node.text_element.classList.add("focussed");var topstatus=document.getElementById("topstatus");topstatus.innerHTML=node["OBJS_PATH"][0];var kids_element=document.getElementById("kids"+desired);var icon_element=document.getElementById("icon"+desired);
if(len(node["C_INV"])>0)var kind_icon=null;else var kind_icon=dot;if(kids_element.style.display=="none"){kids_element.style.display="block";icon_element.innerHTML=kind_icon||caret_down_fill;if(node.fragment===null){var furi="/fragments/search/image?f=A_CIT_{}".format(encodeURIComponent(desired));var result=await fetch(furi);var response=await result.text();node.fragment=response;if(len(node["C_INV"])>0)await build(desired,kids_element)}}else{kids_element.style.display="none";icon_element.innerHTML=
kind_icon||caret_right_fill}results_element.innerHTML=node.fragment};export var results_clicker=async function(event){var anid=find_attr_parents(event.target,"anid");if(anid&&len(anid)>0)document.location="/items/"+anid};export var filters_clicker=async function(event){var action_needed=false;var data_remove=find_attr_parents(event.target,"data-remove");if(data_remove&&len(data_remove)>0){var vals=data_remove.py_split("_");if(len(vals)==3){var __left0__=vals;var op=__left0__[0];var field=__left0__[1];
var val=__left0__[2];var fields=document.PARAMS.py_get(op,dict({}));var py_values=fields.py_get(field,[]);document.PARAMS[op][field]=function(){var __accu0__=[];for(var aval of py_values)if(aval!=val)__accu0__.append(aval);return __accu0__}();var action_needed=true}}var data_add=find_attr_parents(event.target,"data-add");if(data_add&&len(data_add)>0){var vals=data_add.py_split("_");if(len(vals)==3){var __left0__=vals;var op=__left0__[0];var field=__left0__[1];var val=__left0__[2];var fields=document.PARAMS.py_get(op,
dict({}));var py_values=fields.py_get(field,[]);py_values.append(val);document.PARAMS.py_setdefault(op,dict({}))[field]=py_values;var action_needed=true}}if(action_needed==true){var search_url="/search/?"+make_searchparams();document.location=search_url}};export var termsused_clicker=async function(event){var anid=find_attr_parents(event.target,"anid");var vals=document.PARAMS.py_get("A",dict({})).py_get("CIT",[]);if(!__in__(anid,vals))vals.append(anid);document.PARAMS.py_setdefault("A",dict({}))["CIT"]=
vals;var search_url="/search/?"+make_searchparams();document.location=search_url};export var collections_clicker=async function(event){var anid=find_attr_parents(event.target,"data-coll");var vals=document.PARAMS.py_get("A",dict({})).py_get("COL",[]);if(!__in__(anid,vals))vals.append(anid);document.PARAMS.py_setdefault("A",dict({}))["COL"]=vals;var search_url="/search/?"+make_searchparams();document.location=search_url};export var do_search=async function(){var q=searchbox.value;var search_url="/search/?q="+
encodeURIComponent(q);document.location=search_url};export var searchbox_keyup=async function(event){if(event.keyCode==13)do_search()};export var searchbutton_clicker=async function(event){event.preventDefault();do_search()};document.PARAMS=dict({});document.Q="";export var make_searchparams=function(){var buf=[];for(var [op,fields]of document.PARAMS.py_items())for(var [field,vals]of fields.py_items())for(var val of vals)buf.append("f="+op+"_"+field+"_"+val);if(len(document.Q)>0)buf.append("q="+encodeURIComponent(document.Q));
return"&".join(buf)};export var init=async function(){searchbutton.addEventListener("click",searchbutton_clicker);searchbox.addEventListener("keyup",searchbox_keyup);results_element.addEventListener("click",results_clicker);var termsused_element=document.getElementById("termsused");termsused_element.addEventListener("click",termsused_clicker);var filters_element=document.getElementById("filters");if(filters_element)filters_element.addEventListener("click",filters_clicker);var collections_element=
document.getElementById("collections");if(collections_element)collections_element.addEventListener("click",collections_clicker);var sp=(new URL(document.location)).searchParams;for(var param of sp.entries()){if(param[0]=="q")document.Q=param[1];if(param[0]=="f"){var vals=param[1].py_split("_");if(len(vals)==3){var __left0__=vals;var op=__left0__[0];var field=__left0__[1];var val=__left0__[2];document.PARAMS.py_setdefault(op,dict({})).py_setdefault(field,[]).append(val)}}}};window.addEventListener("load",
init);export var initmsnry=function(){var msnry=new Masonry(grid,dict({"columnWidth":".grid-item","itemSelector":".grid-item"}));msnry.layout()};export var grid=document.querySelector(".grid");imagesLoaded(grid,initmsnry);

//# sourceMappingURL=search.map